{"type":"entity","name":"uuid_v7","entityType":"elixir_package","observations":["Hex package name is uuid_v7 (with underscore), not uuidv7","GitHub repo is ryanwinchester/uuidv7","Current version used: 0.6.0","Provides UUIDv7.Type for Ecto integration","Generates time-ordered UUIDs with format like 0197ed7e-f3cf-76c0-aca6-7d6f7cfceb64","Package is conditionally compiled - Ecto type only available if Ecto is loaded"]}
{"type":"entity","name":"Quorum.Schema","entityType":"elixir_module","observations":["Base schema module for all Ecto schemas in Quorum project","Configures primary key as {:id, UUIDv7.Type, autogenerate: true}","Sets foreign key type to UUIDv7.Type","Sets timestamps to UTC datetime","All schemas should use Quorum.Schema instead of Ecto.Schema"]}
{"type":"entity","name":"PostgreSQL UUID setup","entityType":"database_configuration","observations":["uuid-ossp extension is NOT needed for UUIDv7","UUIDs are generated in Elixir application layer, not in PostgreSQL","Initially created migration for uuid-ossp but removed it as unnecessary","PostgreSQL stores UUIDs as binary(16) via Ecto's :binary_id type"]}
{"type":"relation","from":"uuid_v7","to":"Quorum.Schema","relationType":"provides_type_for"}
{"type":"relation","from":"Quorum.Schema","to":"PostgreSQL UUID setup","relationType":"configures_storage_for"}
{"type":"relation","from":"uuid_v7","to":"PostgreSQL UUID setup","relationType":"generates_ids_for"}